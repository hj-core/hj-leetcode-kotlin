.gradle
class Solution {
    /* Complexity:
     * Time O(n) and Space O(n);
     */
    fun nthUglyNumber(n: Int): Int {
        var result = 1
        var count = 1
        val candidates = listOf(ArrayDeque<Int>(), ArrayDeque(), ArrayDeque())
        candidates[0].addLast(2)
        candidates[1].addLast(3)
        candidates[2].addLast(5)

        while (count < n) {
            val bucket = candidates.indices.minBy { candidates[it][0] }
            val candidate = candidates[bucket].removeFirst()
            if (candidate != result) {
                result = candidate
                count++
                candidates[0].addLast(candidate * 2)
                candidates[1].addLast(candidate * 3)
                candidates[2].addLast(candidate * 5)
            }
        }
        return result
    }
}
build/
!gradle/wrapper/gradle-wrapper.jar
!**/src/main/**/build/
!**/src/test/**/build/

### IntelliJ IDEA ###
.idea/modules.xml
.idea/jarRepositories.xml
.idea/compiler.xml
.idea/libraries/
*.iws
*.iml
*.ipr
out/
!**/src/main/**/out/
!**/src/test/**/out/

### Eclipse ###
.apt_generated
.classpath
.factorypath
.project
.settings
.springBeans
.sts4-cache
bin/
!**/src/main/**/bin/
!**/src/test/**/bin/

### NetBeans ###
/nbproject/private/
/nbbuild/
/dist/
/nbdist/
/.nb-gradle/

### VS Code ###
.vscode/

### Mac OS ###
.DS_Store